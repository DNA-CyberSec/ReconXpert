#!/bin/bash

# Advanced Network Scanner
# Author: DNA
# Date: $(date +"%Y-%m-%d")

# Colors
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Check and install dependencies
check_dependencies() {
  for tool in nmap whois dig; do
    if ! command -v "$tool" &>/dev/null; then
      echo -e "$tool not found. Installing..."
      sudo apt install -y "$tool"
    fi
  done
}

# Logging function
log_activity() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] User: ${USER} | Action: $1 | Status: $2" >> reports/activity.log
}

# Nmap scan function
scan_target() {
  echo -e "\n${GREEN}[+] Starting Nmap scan${NC}"
  if nmap -sV -sC "$TARGET" -oN reports/nmap_scan.txt; then
    log_activity "Nmap Scan on $TARGET" "Success"
  else
    log_activity "Nmap Scan on $TARGET" "Failed"
  fi
}

# Whois collection function
whois_target() {
  echo -e "${GREEN}[+] Collecting Whois information${NC}"
  if whois "$TARGET" > reports/whois.txt; then
    log_activity "Whois on $TARGET" "Success"
  else
    log_activity "Whois on $TARGET" "Failed"
  fi
}

# DNS information
dns_info() {
  echo -e "${GREEN}[+] Collecting DNS information${NC}"
  if dig "$TARGET" ANY > reports/dns_info.txt; then
    log_activity "DNS collection on $TARGET" "Success"
  else
    log_activity "DNS Info on $TARGET" "Failed"
  fi
}

# Generate HTML report
generate_report() {
  mkdir -p reports
  local TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
  local REPORT_FILE="reports/report_${TARGET}_${USER}_${TIMESTAMP}.html"

  echo -e "${GREEN}[+] Generating Enhanced HTML report${NC}"
  cat <<EOF > "$REPORT_FILE"
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Scan Report - ${TARGET}</title>
    <style>
        body {font-family: Arial, sans-serif; background-color:#f4f4f9; color:#333;padding:20px;}
        h1, h2 {color:#005a87;}
        pre {background-color:#fff;border-left:4px solid #005a87;padding:10px;overflow-x:auto;}
        footer {border-top:1px solid #ccc;padding-top:10px;color:#777;font-size:0.9em;margin-top:20px;}
    </style>
</head>
<body>
    <h1>Network Scan Report</h1>
    <h2>Target: ${TARGET}</h2>
    <p><strong>Date & Time:</strong> ${TIMESTAMP}</p>

    <h2>Nmap Results</h2>
    <pre>$(cat reports/nmap_scan.txt)</pre>

    <h2>Whois Information</h2>
    <pre>$(cat reports/whois.txt)</pre>

    <h2>DNS Information</h2>
    <pre>$(cat reports/dns_info.txt)</pre>

    <footer>
      Report generated by ${USER} on ${TIMESTAMP}
    </footer>
</body>
</html>
EOF

  if [ $? -eq 0 ]; then
    log_activity "HTML Report Generation for $TARGET" "Success"
    echo "Report generated: $REPORT_FILE"
  else
    log_activity "HTML Report Generation for $TARGET" "Failed"
    echo "Failed to generate report."
  fi
}

# Main execution
main() {
    echo -e "${GREEN}===============================================${NC}"
    echo -e "${GREEN}                   Script${NC}"
    echo -e "${GREEN}===============================================${NC}"
  if [ -z "$1" ]; then
    read -p "Please enter target IP/domain: " TARGET
  else
    TARGET=$1
  fi

  if [ -z "$TARGET" ]; then
    echo "No target provided. Exiting."
    exit 1
  fi

  check_dependencies
  mkdir -p reports
  scan_target
  whois_target
  dns_info
  generate_report
}

main "$@"
